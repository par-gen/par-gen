#######################################
#
# Initial Tokens
#
WS := ' |\n|\r|\t';
TRUE := 'true';
FALSE := 'false';
NULL := 'null';
CURLY_OPEN := '{';
CURLY_CLOSE := '}';
COMMA := ',';
COLON := ':';
STRING := '"([^"\\]|\\["\\/bfnrt]|\\u[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])*"';
BRACKET_OPEN := '\[';
BRACKET_CLOSE := '\]';
ZERO := '0';
ONE_NINE := '[1-9]';
DOT := '\.';
UPPER_E := 'E';
LOWER_E := 'e';
PLUS := '+';
MINUS := '-';

#######################################
#
# Rules
#

Json := Element;

Element := Spaces? Value Spaces?;

Value := Object | Array | String | Number | TRUE | FALSE | NULL;

Object := CURLY_OPEN Spaces? CURLY_CLOSE | CURLY_OPEN Members CURLY_CLOSE;

Members := Member | Members COMMA Member;

Member := Spaces? String Spaces? COLON Element;

String := STRING;

Array := BRACKET_OPEN Spaces? BRACKET_CLOSE | BRACKET_OPEN Elements BRACKET_CLOSE;

Elements := Element | Elements COMMA Element;

Number := Integer Fraction? Exponent?;

Integer := MINUS? ZERO | MINUS? ONE_NINE Digits;

Digits := Digits Digit | Digit;

Digit := ZERO | ONE_NINE;

Fraction := DOT Digits;

Exponent := UPPER_E Digits | UPPER_E Sign Digits | LOWER_E Digits | LOWER_E Sign Digits;

Sign := PLUS | MINUS;

Spaces := Spaces WS | WS;
