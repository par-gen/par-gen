#######################################
#
# Tokens
#
CHARACTER := '[^\(\)\[\]\|\.\*?+\r\n\b\t\frnbtf\\-^x0-9a-f]';
HEX_NUMBER := '[0-9c-fa]';
CONTROL_CHARACTER := '[rntf]';
BACKSLASH := '\\';
X := 'x';
B := 'b';
CARET := '^';
DASH := '-';
DOT := '\.';
UNION := '\|';
PAREN_OPEN := '\(';
PAREN_CLOSE := '\)';
QUANTIFIER := '[\*?+]';
BRACKET_OPEN := '\[';
BRACKET_CLOSE := '\]';

#######################################
#
# Rules
#

RegExp := Expression;

Expression := Union | Sequence | Atom;

Union :=
  | Union UNION Sequence
  | Union UNION Atom
  | Union UNION
  | Sequence UNION Sequence
  | Sequence UNION Atom
  | Sequence UNION
  | Atom UNION Sequence
  | Atom UNION Atom
  | Atom UNION
  ;

Sequence :=
    Atom Atom
  | Sequence Atom
  ;

Atom :=
    Character
  | Character QUANTIFIER
  | Group
  | Group QUANTIFIER
  | CharacterClass
  | CharacterClass QUANTIFIER
  ;

Group :=
    PAREN_OPEN Union PAREN_CLOSE
  | PAREN_OPEN Sequence PAREN_CLOSE
  | PAREN_OPEN Atom PAREN_CLOSE
  ;

CharacterClass :=
    BRACKET_OPEN CharacterClassCharacters BRACKET_CLOSE
  | BRACKET_OPEN CARET CharacterClassCharacters BRACKET_CLOSE
  ;

CharacterClassCharacters :=
    CharacterClassCharacter
  | CharacterClassCharacters CharacterClassCharacter
  ;

CharacterClassCharacter :=
    CharacterOrNumberOrX
  | ControlCharacterOrB
  | BACKSLASH DASH
  | BACKSLASH CARET
  | QUANTIFIER
  | PAREN_OPEN
  | PAREN_CLOSE
  | UNION
  | DOT
  | BACKSLASH BACKSLASH
  | BACKSLASH ControlCharacterOrB
  | BACKSLASH BRACKET_OPEN
  | BACKSLASH BRACKET_CLOSE
  | CharacterClassRange
  ;

CharacterClassRange :=
    CharacterOrNumberOrX DASH CharacterOrNumberOrX
  | CharacterOrNumberOrX DASH ControlCharacterOrB
  | ControlCharacterOrB DASH CharacterOrNumberOrX
  | ControlCharacterOrB DASH ControlCharacterOrB
  ;

Character :=
    CharacterOrNumberOrX
  | ControlCharacterOrB
  | CARET
  | DASH
  | BACKSLASH EscapedCharacter
  | BACKSLASH X HexNumber HexNumber
  ;

HexNumber :=
    HEX_NUMBER
  | B
  ;

CharacterOrNumberOrX :=
    CHARACTER
  | HexNumber
  | X
  ;

ControlCharacterOrB :=
    CONTROL_CHARACTER
  | B
  ;

EscapedCharacter :=
    ControlCharacterOrB
  | BACKSLASH
  | DOT
  | UNION
  | PAREN_OPEN
  | PAREN_CLOSE
  | BRACKET_OPEN
  | BRACKET_CLOSE
  | QUANTIFIER
  ;
