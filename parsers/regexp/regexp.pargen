#######################################
#
# Tokens
#
CHARACTER := '[^\(\)\[\]\|\.\*?+\r\n\b\t\frnbtf\\-^]';
CONTROL_CHARACTER := '[rnbtf]';
BACKSLASH := '\\';
CARET := '^';
DASH := '-';
DOT := '\.';
UNION := '\|';
PAREN_OPEN := '\(';
PAREN_CLOSE := '\)';
QUANTIFIER := '[\*?+]';
BRACKET_OPEN := '\[';
BRACKET_CLOSE := '\]';

#######################################
#
# Rules
#

RegExp := Expression;

Expression := Union | Sequence | Atom;

Union :=
  | Union UNION Sequence
  | Union UNION Atom
  | Sequence UNION Sequence
  | Sequence UNION Atom
  | Atom UNION Sequence
  | Atom UNION Atom
  ;

Sequence :=
    Atom Atom
  | Sequence Atom
  ;

Atom :=
    Character
  | Character QUANTIFIER
  | Group
  | Group QUANTIFIER
  | CharacterClass
  | CharacterClass QUANTIFIER
  ;

Group :=
    PAREN_OPEN Union PAREN_CLOSE
  | PAREN_OPEN Sequence PAREN_CLOSE
  | PAREN_OPEN Atom PAREN_CLOSE
  ;

CharacterClass :=
    BRACKET_OPEN CharacterClassCharacters BRACKET_CLOSE
  | BRACKET_OPEN CARET CharacterClassCharacters BRACKET_CLOSE
  ;

CharacterClassCharacters :=
    CharacterClassCharacter
  | CharacterClassCharacters CharacterClassCharacter
  ;

CharacterClassCharacter :=
    CHARACTER
  | CONTROL_CHARACTER
  | BACKSLASH DASH
  | BACKSLASH CARET
  | QUANTIFIER
  | PAREN_OPEN
  | PAREN_CLOSE
  | UNION
  | DOT
  | BACKSLASH BACKSLASH
  | BACKSLASH CONTROL_CHARACTER
  | BACKSLASH BRACKET_CLOSE
  | CharacterClassRange
  ;

CharacterClassRange :=
    CHARACTER DASH CHARACTER
  ;

Character :=
    CHARACTER
  | CONTROL_CHARACTER
  | CARET
  | DASH
  | BACKSLASH EscapedCharacter
  ;

EscapedCharacter :=
    CONTROL_CHARACTER
  | BACKSLASH
  | DOT
  | UNION
  | PAREN_OPEN
  | PAREN_CLOSE
  | BRACKET_OPEN
  | BRACKET_CLOSE
  | QUANTIFIER
  ;
